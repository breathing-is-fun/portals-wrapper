// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Display render correctly 1`] = `
<Demo>
  <Navigation
    clock={false}
    datas={
      Array [
        Object {
          "department": "4,5,1",
          "group": "",
          "id": 89,
          "imgurl": "http://47.95.1.229:9007/UploadFile/ddzx.jpg",
          "isdelete": false,
          "isedit": false,
          "title": "test",
          "url": "",
        },
      ]
    }
    display={true}
    size=""
    title="test"
  >
    <div
      className="Navigation"
    >
      <div
        className="content"
        style={
          Object {
            "display": "",
          }
        }
      >
        <div
          className="content-wrapper"
          style={
            Object {
              "width": 300,
            }
          }
        >
          test
        </div>
        <div
          className="content-wrapper"
          style={
            Object {
              "width": 300,
            }
          }
        >
          <div
            className="content-time"
          />
        </div>
        <div
          className="content-wrapper content-switch"
        >
          <Dropdown
            mouseEnterDelay={0.15}
            mouseLeaveDelay={0.1}
            onVisibleChange={[Function]}
            overlay={
              <Menu
                className=""
                focusable={false}
                theme="light"
              >
                <MenuItem
                  onClick={[Function]}
                >
                  <a
                    rel="noopener noreferrer"
                  >
                    test
                  </a>
                </MenuItem>
              </Menu>
            }
            placement="bottomLeft"
            trigger={
              Array [
                "hover",
                "click",
              ]
            }
            visible={false}
          >
            <Dropdown
              defaultVisible={false}
              mouseEnterDelay={0.15}
              mouseLeaveDelay={0.1}
              onVisibleChange={[Function]}
              overlay={[Function]}
              overlayClassName=""
              overlayStyle={Object {}}
              placement="bottomLeft"
              prefixCls="ant-dropdown"
              showAction={Array []}
              transitionName="slide-up"
              trigger={
                Array [
                  "hover",
                  "click",
                ]
              }
              visible={false}
            >
              <Trigger
                action={
                  Array [
                    "hover",
                    "click",
                  ]
                }
                afterPopupVisibleChange={[Function]}
                blurDelay={0.15}
                builtinPlacements={
                  Object {
                    "bottomCenter": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tc",
                        "bc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomLeft": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tl",
                        "bl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "bottomRight": Object {
                      "offset": Array [
                        0,
                        4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "tr",
                        "br",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topCenter": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bc",
                        "tc",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topLeft": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "bl",
                        "tl",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                    "topRight": Object {
                      "offset": Array [
                        0,
                        -4,
                      ],
                      "overflow": Object {
                        "adjustX": 1,
                        "adjustY": 1,
                      },
                      "points": Array [
                        "br",
                        "tr",
                      ],
                      "targetOffset": Array [
                        0,
                        0,
                      ],
                    },
                  }
                }
                defaultPopupVisible={false}
                defaultVisible={false}
                destroyPopupOnHide={false}
                focusDelay={0}
                getDocument={[Function]}
                getPopupClassNameFromAlign={[Function]}
                hideAction={Array []}
                mask={false}
                maskClosable={true}
                mouseEnterDelay={0.15}
                mouseLeaveDelay={0.1}
                onPopupAlign={[Function]}
                onPopupVisibleChange={[Function]}
                onVisibleChange={[Function]}
                overlay={[Function]}
                popup={[Function]}
                popupAlign={Object {}}
                popupClassName=""
                popupPlacement="bottomLeft"
                popupStyle={Object {}}
                popupTransitionName="slide-up"
                popupVisible={false}
                prefixCls="ant-dropdown"
                showAction={Array []}
                visible={false}
              >
                <span
                  className="droplink ant-dropdown-trigger"
                  key="trigger"
                  onClick={[Function]}
                  onMouseDown={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  onTouchStart={[Function]}
                >
                  test
                  <Icon
                    className="droplink-icon"
                    style={
                      Object {
                        "marginLeft": 10,
                        "transform": "rotate(0deg)",
                      }
                    }
                    type="down"
                  >
                    <i
                      className="anticon anticon-down droplink-icon"
                      style={
                        Object {
                          "marginLeft": 10,
                          "transform": "rotate(0deg)",
                        }
                      }
                    >
                      <IconReact
                        className=""
                        type="down-o"
                      >
                        <svg
                          aria-hidden="true"
                          className=""
                          data-icon="down"
                          fill="currentColor"
                          height="1em"
                          key="svg-down"
                          viewBox="64 64 896 896"
                          width="1em"
                        >
                          <path
                            d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                            key="svg-down-svg-0"
                          />
                        </svg>
                      </IconReact>
                    </i>
                  </Icon>
                </span>
              </Trigger>
            </Dropdown>
          </Dropdown>
        </div>
      </div>
      <div
        className="children-wrapper"
        style={
          Object {
            "height": "-65px",
          }
        }
      >
        <Grid
          enumDatas={Array []}
          layout={
            Array [
              Object {
                "detailpath": "http://www.baidu.com/",
                "h": 12,
                "i": "demo1",
                "id": 117,
                "imgurl": "http://47.95.1.229:9003/UploadFile/201808/szy.png",
                "maxw": 0,
                "mealid": 89,
                "minw": 0,
                "path": "../../../../thirdModules/demo1/index.js",
                "showdetail": true,
                "still": false,
                "style": Object {},
                "title": "demo1",
                "w": 12,
                "x": 0,
                "y": 0,
              },
              Object {
                "detailpath": "http://www.baidu.com/",
                "h": 9,
                "i": "demo2",
                "id": 118,
                "imgurl": "http://47.95.1.229:9003/UploadFile/201808/dzx.png",
                "maxw": 0,
                "mealid": 89,
                "minw": 0,
                "path": "../../../../thirdModules/demo2/index.js",
                "showdetail": true,
                "still": false,
                "style": Object {},
                "title": "demo2",
                "w": 3,
                "x": 0,
                "y": 12,
              },
            ]
          }
          showDelete={false}
          showEdit={false}
          size=""
        >
          <div
            className="Grid"
            onDragOver={[Function]}
            onDrop={[Function]}
          >
            <WidthProvider
              breakpoints={
                Object {
                  "lg": 1270,
                  "md": 996,
                  "sm": 768,
                  "xs": 480,
                  "xxs": 0,
                }
              }
              className="layout"
              cols={
                Object {
                  "lg": 12,
                  "md": 10,
                  "sm": 6,
                  "xs": 4,
                  "xxs": 2,
                }
              }
              isDraggable={false}
              isResizable={false}
              margin={
                Array [
                  20,
                  25,
                ]
              }
              measureBeforeMount={false}
              onBreakpointChange={[Function]}
              onLayoutChange={[Function]}
              rowHeight={5}
              style={
                Object {
                  "background": "#f5f6fa",
                  "height": "100%",
                }
              }
              width={0}
            >
              <ResponsiveReactGridLayout
                breakpoints={
                  Object {
                    "lg": 1270,
                    "md": 996,
                    "sm": 768,
                    "xs": 480,
                    "xxs": 0,
                  }
                }
                className="layout"
                cols={
                  Object {
                    "lg": 12,
                    "md": 10,
                    "sm": 6,
                    "xs": 4,
                    "xxs": 2,
                  }
                }
                isDraggable={false}
                isResizable={false}
                layouts={
                  Object {
                    "lg": Array [],
                    "xxs": Array [
                      Object {
                        "h": 12,
                        "i": "demo1",
                        "isDraggable": undefined,
                        "isResizable": undefined,
                        "maxH": undefined,
                        "maxW": undefined,
                        "minH": undefined,
                        "minW": undefined,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0,
                      },
                      Object {
                        "h": 9,
                        "i": "demo2",
                        "isDraggable": undefined,
                        "isResizable": undefined,
                        "maxH": undefined,
                        "maxW": undefined,
                        "minH": undefined,
                        "minW": undefined,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 12,
                      },
                    ],
                  }
                }
                margin={
                  Array [
                    20,
                    25,
                  ]
                }
                onBreakpointChange={[Function]}
                onLayoutChange={[Function]}
                onWidthChange={[Function]}
                rowHeight={5}
                style={
                  Object {
                    "background": "#f5f6fa",
                    "height": "100%",
                  }
                }
                width={0}
              >
                <ReactGridLayout
                  autoSize={true}
                  className="layout"
                  cols={2}
                  compactType="vertical"
                  containerPadding={null}
                  draggableCancel=""
                  draggableHandle=""
                  isDraggable={false}
                  isResizable={false}
                  layout={
                    Array [
                      Object {
                        "h": 12,
                        "i": "demo1",
                        "isDraggable": undefined,
                        "isResizable": undefined,
                        "maxH": undefined,
                        "maxW": undefined,
                        "minH": undefined,
                        "minW": undefined,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 0,
                      },
                      Object {
                        "h": 9,
                        "i": "demo2",
                        "isDraggable": undefined,
                        "isResizable": undefined,
                        "maxH": undefined,
                        "maxW": undefined,
                        "minH": undefined,
                        "minW": undefined,
                        "moved": false,
                        "static": false,
                        "w": 2,
                        "x": 0,
                        "y": 12,
                      },
                    ]
                  }
                  margin={
                    Array [
                      20,
                      25,
                    ]
                  }
                  maxRows={Infinity}
                  onDrag={[Function]}
                  onDragStart={[Function]}
                  onDragStop={[Function]}
                  onLayoutChange={[Function]}
                  onResize={[Function]}
                  onResizeStart={[Function]}
                  onResizeStop={[Function]}
                  preventCollision={false}
                  rowHeight={5}
                  style={
                    Object {
                      "background": "#f5f6fa",
                      "height": "100%",
                    }
                  }
                  useCSSTransforms={true}
                  verticalCompact={true}
                  width={0}
                >
                  <div
                    className="react-grid-layout layout"
                    style={
                      Object {
                        "background": "#f5f6fa",
                        "height": "100%",
                      }
                    }
                  >
                    <GridItem
                      cancel=""
                      className=""
                      cols={2}
                      containerPadding={
                        Array [
                          20,
                          25,
                        ]
                      }
                      containerWidth={0}
                      h={12}
                      handle=""
                      i="demo1"
                      isDraggable={false}
                      isResizable={false}
                      key=".$demo1"
                      margin={
                        Array [
                          20,
                          25,
                        ]
                      }
                      maxH={Infinity}
                      maxRows={Infinity}
                      maxW={Infinity}
                      minH={1}
                      minW={1}
                      onDrag={[Function]}
                      onDragStart={[Function]}
                      onDragStop={[Function]}
                      onResize={[Function]}
                      onResizeStart={[Function]}
                      onResizeStop={[Function]}
                      rowHeight={5}
                      static={false}
                      useCSSTransforms={true}
                      usePercentages={false}
                      w={2}
                      x={0}
                      y={0}
                    >
                      <Shell
                        className="react-grid-item cssTransforms"
                        data-grid={
                          Object {
                            "detailpath": "http://www.baidu.com/",
                            "h": 12,
                            "i": "demo1",
                            "id": 117,
                            "imgurl": "http://47.95.1.229:9003/UploadFile/201808/szy.png",
                            "maxw": 0,
                            "mealid": 89,
                            "minw": 0,
                            "path": "../../../../thirdModules/demo1/index.js",
                            "showdetail": true,
                            "still": false,
                            "style": Object {},
                            "title": "demo1",
                            "w": 12,
                            "x": 0,
                            "y": 0,
                          }
                        }
                        detailPath="http://www.baidu.com/"
                        key="demo1"
                        onEdit={[Function]}
                        showDelete={false}
                        showDetail={true}
                        showEdit={false}
                        showTitle={true}
                        size=""
                        style={
                          Object {
                            "MozTransform": "translate(20px,25px)",
                            "OTransform": "translate(20px,25px)",
                            "WebkitTransform": "translate(20px,25px)",
                            "height": "335px",
                            "msTransform": "translate(20px,25px)",
                            "position": "absolute",
                            "transform": "translate(20px,25px)",
                            "width": "-40px",
                          }
                        }
                        title="demo1"
                        type="component"
                      >
                        <div
                          className="Shell"
                          data-grid={
                            Object {
                              "detailpath": "http://www.baidu.com/",
                              "h": 12,
                              "i": "demo1",
                              "id": 117,
                              "imgurl": "http://47.95.1.229:9003/UploadFile/201808/szy.png",
                              "maxw": 0,
                              "mealid": 89,
                              "minw": 0,
                              "path": "../../../../thirdModules/demo1/index.js",
                              "showdetail": true,
                              "still": false,
                              "style": Object {},
                              "title": "demo1",
                              "w": 12,
                              "x": 0,
                              "y": 0,
                            }
                          }
                          onClick={[Function]}
                          size=""
                          style={
                            Object {
                              "MozTransform": "translate(20px,25px)",
                              "OTransform": "translate(20px,25px)",
                              "WebkitTransform": "translate(20px,25px)",
                              "height": "335px",
                              "msTransform": "translate(20px,25px)",
                              "overflow": "auto",
                              "position": "absolute",
                              "transform": "translate(20px,25px)",
                              "width": "-40px",
                            }
                          }
                          type="component"
                        >
                          <span
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "fontSize": 17,
                                "position": "absolute",
                                "right": 10,
                                "top": 6,
                              }
                            }
                          >
                            详情 &gt;
                          </span>
                          <span
                            className="sc-title operation-title"
                          >
                            demo1
                          </span>
                          <div
                            className="render-div"
                            id="demo1"
                            style={
                              Object {
                                "height": "calc(100% - 33px)",
                              }
                            }
                          />
                        </div>
                      </Shell>
                    </GridItem>
                    <GridItem
                      cancel=""
                      className=""
                      cols={2}
                      containerPadding={
                        Array [
                          20,
                          25,
                        ]
                      }
                      containerWidth={0}
                      h={9}
                      handle=""
                      i="demo2"
                      isDraggable={false}
                      isResizable={false}
                      key=".$demo2"
                      margin={
                        Array [
                          20,
                          25,
                        ]
                      }
                      maxH={Infinity}
                      maxRows={Infinity}
                      maxW={Infinity}
                      minH={1}
                      minW={1}
                      onDrag={[Function]}
                      onDragStart={[Function]}
                      onDragStop={[Function]}
                      onResize={[Function]}
                      onResizeStart={[Function]}
                      onResizeStop={[Function]}
                      rowHeight={5}
                      static={false}
                      useCSSTransforms={true}
                      usePercentages={false}
                      w={2}
                      x={0}
                      y={12}
                    >
                      <Shell
                        className="react-grid-item cssTransforms"
                        data-grid={
                          Object {
                            "detailpath": "http://www.baidu.com/",
                            "h": 9,
                            "i": "demo2",
                            "id": 118,
                            "imgurl": "http://47.95.1.229:9003/UploadFile/201808/dzx.png",
                            "maxw": 0,
                            "mealid": 89,
                            "minw": 0,
                            "path": "../../../../thirdModules/demo2/index.js",
                            "showdetail": true,
                            "still": false,
                            "style": Object {},
                            "title": "demo2",
                            "w": 3,
                            "x": 0,
                            "y": 12,
                          }
                        }
                        detailPath="http://www.baidu.com/"
                        key="demo2"
                        onEdit={[Function]}
                        showDelete={false}
                        showDetail={true}
                        showEdit={false}
                        showTitle={true}
                        size=""
                        style={
                          Object {
                            "MozTransform": "translate(20px,385px)",
                            "OTransform": "translate(20px,385px)",
                            "WebkitTransform": "translate(20px,385px)",
                            "height": "245px",
                            "msTransform": "translate(20px,385px)",
                            "position": "absolute",
                            "transform": "translate(20px,385px)",
                            "width": "-40px",
                          }
                        }
                        title="demo2"
                        type="component"
                      >
                        <div
                          className="Shell"
                          data-grid={
                            Object {
                              "detailpath": "http://www.baidu.com/",
                              "h": 9,
                              "i": "demo2",
                              "id": 118,
                              "imgurl": "http://47.95.1.229:9003/UploadFile/201808/dzx.png",
                              "maxw": 0,
                              "mealid": 89,
                              "minw": 0,
                              "path": "../../../../thirdModules/demo2/index.js",
                              "showdetail": true,
                              "still": false,
                              "style": Object {},
                              "title": "demo2",
                              "w": 3,
                              "x": 0,
                              "y": 12,
                            }
                          }
                          onClick={[Function]}
                          size=""
                          style={
                            Object {
                              "MozTransform": "translate(20px,385px)",
                              "OTransform": "translate(20px,385px)",
                              "WebkitTransform": "translate(20px,385px)",
                              "height": "245px",
                              "msTransform": "translate(20px,385px)",
                              "overflow": "auto",
                              "position": "absolute",
                              "transform": "translate(20px,385px)",
                              "width": "-40px",
                            }
                          }
                          type="component"
                        >
                          <span
                            onMouseDown={[Function]}
                            style={
                              Object {
                                "cursor": "pointer",
                                "fontSize": 17,
                                "position": "absolute",
                                "right": 10,
                                "top": 6,
                              }
                            }
                          >
                            详情 &gt;
                          </span>
                          <span
                            className="sc-title operation-title"
                          >
                            demo2
                          </span>
                          <div
                            className="render-div"
                            id="demo2"
                            style={
                              Object {
                                "height": "calc(100% - 33px)",
                              }
                            }
                          />
                        </div>
                      </Shell>
                    </GridItem>
                  </div>
                </ReactGridLayout>
              </ResponsiveReactGridLayout>
            </WidthProvider>
          </div>
        </Grid>
      </div>
    </div>
  </Navigation>
</Demo>
`;
