// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navigation render correctly 1`] = `
<Navigation
  clock={false}
  menu={Array []}
>
  <div
    className="Navigation"
  >
    <div
      className="content"
    >
      <div
        className="content-wrapper"
        style={
          Object {
            "width": 300,
          }
        }
      >
        浙江省水利综合门户
      </div>
      <div
        className="content-wrapper"
        style={
          Object {
            "width": 300,
          }
        }
      >
        <div
          className="content-time"
        />
      </div>
      <div
        className="content-wrapper content-switch"
      >
        <Dropdown
          mouseEnterDelay={0.15}
          mouseLeaveDelay={0.1}
          overlay={
            <Menu
              className=""
              focusable={false}
              prefixCls="ant-menu"
              theme="light"
            />
          }
          placement="bottomLeft"
          prefixCls="ant-dropdown"
          trigger={
            Array [
              "hover",
              "click",
            ]
          }
        >
          <Dropdown
            defaultVisible={false}
            mouseEnterDelay={0.15}
            mouseLeaveDelay={0.1}
            onVisibleChange={[Function]}
            overlay={
              <Menu
                className=""
                expandIcon={
                  <span
                    className="ant-dropdown-menu-submenu-arrow"
                  >
                    <Icon
                      className="ant-dropdown-menu-submenu-arrow-icon"
                      type="right"
                    />
                  </span>
                }
                focusable={false}
                mode="vertical"
                prefixCls="ant-menu"
                selectable={false}
                theme="light"
              />
            }
            overlayClassName=""
            overlayStyle={Object {}}
            placement="bottomLeft"
            prefixCls="ant-dropdown"
            showAction={Array []}
            transitionName="slide-up"
            trigger={
              Array [
                "hover",
                "click",
              ]
            }
          >
            <Trigger
              action={
                Array [
                  "hover",
                  "click",
                ]
              }
              afterPopupVisibleChange={[Function]}
              blurDelay={0.15}
              builtinPlacements={
                Object {
                  "bottomCenter": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tc",
                      "bc",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "bottomLeft": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tl",
                      "bl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "bottomRight": Object {
                    "offset": Array [
                      0,
                      4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "tr",
                      "br",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topCenter": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bc",
                      "tc",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topLeft": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "bl",
                      "tl",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                  "topRight": Object {
                    "offset": Array [
                      0,
                      -4,
                    ],
                    "overflow": Object {
                      "adjustX": 1,
                      "adjustY": 1,
                    },
                    "points": Array [
                      "br",
                      "tr",
                    ],
                    "targetOffset": Array [
                      0,
                      0,
                    ],
                  },
                }
              }
              defaultPopupVisible={false}
              defaultVisible={false}
              destroyPopupOnHide={false}
              focusDelay={0}
              getDocument={[Function]}
              getPopupClassNameFromAlign={[Function]}
              hideAction={Array []}
              mask={false}
              maskClosable={true}
              mouseEnterDelay={0.15}
              mouseLeaveDelay={0.1}
              onPopupAlign={[Function]}
              onPopupVisibleChange={[Function]}
              onVisibleChange={[Function]}
              overlay={
                <Menu
                  className=""
                  expandIcon={
                    <span
                      className="ant-dropdown-menu-submenu-arrow"
                    >
                      <Icon
                        className="ant-dropdown-menu-submenu-arrow-icon"
                        type="right"
                      />
                    </span>
                  }
                  focusable={false}
                  mode="vertical"
                  prefixCls="ant-menu"
                  selectable={false}
                  theme="light"
                />
              }
              popup={
                <Menu
                  className=""
                  expandIcon={
                    <span
                      className="ant-dropdown-menu-submenu-arrow"
                    >
                      <Icon
                        className="ant-dropdown-menu-submenu-arrow-icon"
                        type="right"
                      />
                    </span>
                  }
                  focusable={false}
                  mode="vertical"
                  onClick={[Function]}
                  prefixCls="ant-dropdown-menu"
                  selectable={false}
                  theme="light"
                />
              }
              popupAlign={Object {}}
              popupClassName=""
              popupPlacement="bottomLeft"
              popupStyle={Object {}}
              popupTransitionName="slide-up"
              popupVisible={false}
              prefixCls="ant-dropdown"
              showAction={Array []}
            >
              <span
                className="droplink ant-dropdown-trigger"
                key="trigger"
                onClick={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
              >
                套餐切换
                <Icon
                  type="down"
                >
                  <i
                    className="anticon anticon-down"
                  >
                    <IconReact
                      className=""
                      type="down-o"
                    >
                      <svg
                        aria-hidden="true"
                        className=""
                        data-icon="down"
                        fill="currentColor"
                        height="1em"
                        key="svg-down"
                        viewBox="64 64 896 896"
                        width="1em"
                      >
                        <path
                          d="M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z"
                          key="svg-down-svg-0"
                        />
                      </svg>
                    </IconReact>
                  </i>
                </Icon>
              </span>
            </Trigger>
          </Dropdown>
        </Dropdown>
      </div>
    </div>
    <div
      className="children-wrapper"
      style={
        Object {
          "height": -65,
        }
      }
    >
      test
    </div>
  </div>
</Navigation>
`;
