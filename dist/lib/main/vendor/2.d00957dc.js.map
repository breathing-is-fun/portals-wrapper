{"version":3,"sources":["webpack:///./src/modules/Display/index.js"],"names":["Display","props","componentDidMount","loadLayout","layout","state","pathArr","item","path","type","push","toString","Promise","all","eval","then","i","modules","length","TestModule","key","testModule","_moduleOnMount","call","transStaticDatas","result","dataSource","Object","assign","static","fetch","json","setState","callback","render","layoutProps","className","cols","rowHeight","width","document","documentElement","clientWidth","body","margin","map","border","height","overflow","background","ref","Component"],"mappings":"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","file":"vendor/2.d00957dc.js","sourcesContent":["/*\r\n * @Author: zy9@github.com/zy410419243\r\n * @Date: 2018-09-28 09:01:44\r\n * @Last Modified by: zy9\r\n * @Last Modified time: 2018-09-28 15:45:53\r\n */\r\nimport React, { Component } from 'react';\r\n\r\nimport GridLayout from 'react-grid-layout';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\n\r\nexport default class Display extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tlayout: [],\r\n\t\t};\r\n\t}\r\n\r\n    componentDidMount = () => {\r\n    \tthis.loadLayout(() => {\r\n    \t\tconst { layout } = this.state;\r\n    \t\tlet pathArr = [];\r\n\r\n    \t\tfor(let item of layout) {\r\n    \t\t\tconst { path, type } = item;\r\n\r\n    \t\t\ttype != 'iframe' && pathArr.push(`import('${ path }')`);\r\n    \t\t}\r\n    \t\tpathArr = `[${ pathArr.toString() }]`;\r\n\r\n    \t\t/* eslint-disable no-eval */\r\n    \t\tPromise.all(eval(`${ pathArr }`)).then(modules => {\r\n    \t\t\tfor(let i = 0; i < modules.length; i++) {\r\n    \t\t\t\tconst { TestModule } = modules[i];\r\n    \t\t\t\tconst { i: key } = layout[i];\r\n    \t\t\t\tconst testModule = new TestModule(this[key]);\r\n    \t\t\t\tconst { _moduleOnMount } = testModule;\r\n\r\n    \t\t\t\t_moduleOnMount && _moduleOnMount.call(testModule);\r\n    \t\t\t}\r\n    \t\t});\r\n    \t});\r\n    }\r\n\r\n    transStaticDatas = dataSource => {\r\n    \tlet result = [];\r\n\r\n    \tfor(let item of dataSource) {\r\n    \t\tresult.push(Object.assign({}, item, { static: true }));\r\n    \t}\r\n\r\n    \treturn result;\r\n    }\r\n\r\n    loadLayout = callback => {\r\n    \tfetch('../../../mock/layoutDatas.json')\r\n    \t\t.then(result => result.json())\r\n    \t\t.then(result => {\r\n    \t\t\tconst { layout } = result;\r\n\r\n    \t\t\tthis.setState({ layout: this.transStaticDatas(layout) }, () => callback && callback());\r\n    \t\t});\r\n    }\r\n\r\n    render = () => {\r\n    \tconst { layout } = this.state;\r\n\r\n    \tconst layoutProps = {\r\n    \t\tclassName: 'layout',\r\n    \t\t// layout,\r\n    \t\tcols: 12,\r\n    \t\trowHeight: 30,\r\n    \t\twidth: document.documentElement.clientWidth || document.body.clientWidth,\r\n    \t\tmargin: [10, 10],\r\n    \t};\r\n\r\n    \treturn (\r\n    \t\t<div className='Display'>\r\n    \t\t\t<GridLayout { ...layoutProps }>\r\n    \t\t\t\t{\r\n    \t\t\t\t\tlayout.map(item => {\r\n    \t\t\t\t\t\tconst { i, type, path } = item;\r\n\r\n    \t\t\t\t\t\treturn type == 'iframe' ? (\r\n    \t\t\t\t\t\t\t<div key={ i } data-grid={ item }>\r\n    \t\t\t\t\t\t\t\t<iframe src={ path } style={{ border: 'none', width: '100%', height: '100%', overflow: 'auto' }}></iframe>\r\n    \t\t\t\t\t\t\t</div>\r\n    \t\t\t\t\t\t) : (\r\n    \t\t\t\t\t\t\t<div key={ i } data-grid={ item } style={{ background: '#ccc' }} ref={ ref => this[i] = ref } />\r\n    \t\t\t\t\t\t);\r\n    \t\t\t\t\t})\r\n    \t\t\t\t}\r\n    \t\t\t</GridLayout>\r\n    \t\t</div>\r\n    \t);\r\n    }\r\n}"],"sourceRoot":""}